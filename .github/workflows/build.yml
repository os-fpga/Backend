name: Build Compatibility

# Only run for pull requests as we care contribution to the master
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linux-gcc:
    runs-on: ubuntu-latest
    # Branch on different OS and settings
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Build Compatibility: GCC-8 (Ubuntu 18.04)"
            cc: gcc-8
            cxx: g++-8
          - name: "Build Compatibility: GCC-9 (Ubuntu 18.04)"
            cc: gcc-9
            cxx: g++-9
    # Define the steps to run the build job
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo .github/workflows/install_ubuntu_dependencies_build.sh

      - name: Checkout submodule
        run: |
          make checkout

      - name: Build
        run: |
          make compile

  centos7-gcc:
    runs-on: ubuntu-latest
    container:
      image: centos:7
    defaults:
      run:
        shell: bash   
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Build Compatibility: GCC-9 (CentOs)"
            cc: gcc-9
            cxx: g++-9
    # Define the steps to run the build job
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"

      - name: Install ssh-agent
        run: |
          yum install -y openssh-server openssh-clients
          yum-config-manager --enable rhel-server-rhscl-7-rpms
          yum install -y https://repo.ius.io/ius-release-el7.rpm
          yum install -y centos-release-scl
          yum install -y devtoolset-9
          yum install -y devtoolset-9-toolchain
          yum remove -y git*
          yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
          yum install -y git

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          bash .github/workflows/install_centos_dependencies_build.sh
          
      - name: Show shell configuration
        run: |
          env
          source /opt/rh/devtoolset-9/enable
          which gcc 
          which g++ 

      - name: Configure shell
        run: |
          source /opt/rh/devtoolset-9/enable
          echo 'CC=/opt/rh/devtoolset-9/root/usr/bin/gcc' >> $GITHUB_ENV
          echo 'CXX=/opt/rh/devtoolset-9/root/usr/bin/g++' >> $GITHUB_ENV
          echo 'PATH=/usr/local/Qt-5.15.0/bin:/usr/lib/ccache:'"$PATH" >> $GITHUB_ENV
          echo 'PREFIX=/tmp/raptor_gui-install' >> $GITHUB_ENV
          echo "$PREFIX" >> $GITHUB_PATH
          echo "ADDITIONAL_CMAKE_OPTIONS='-DMY_CXX_WARNING_FLAGS="-W -Wall -Wextra -Wno-unused-parameter -Wno-unused-variable -Werror -UNDEBUG"'" >> $GITHUB_ENV
          echo 'RULE_MESSAGES=off' >> $GITHUB_ENV
          echo 'LC_ALL=en_US.utf-8' >> $GITHUB_ENV
          echo 'LANG=en_US.utf-8' >> $GITHUB_ENV
          
      - name: Configure git
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
        
      - name: Build
        run: |
          echo $PWD
          ls -all
          ls -all OpenFPGA/
          export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
          git submodule init 
          git submodule update --init --recursive
          make compile
