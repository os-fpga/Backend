diff --git a/CMakeLists.txt b/CMakeLists.txt
index 76e27b7e..12dbba49 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -171,10 +171,10 @@ else ()
       "-Wmissing-include-dirs"        #Warn if a user include directory is missing
       "-Wredundant-decls"             #Warn if there are overlapping declarations
       "-Wswitch-default"              #Warn if a switch has no default
-      "-Wundef"                       #Warn if #if() preprocessor refers to an undefined directive
+      "-Wno-undef"                    #No-Warn if #if() preprocessor refers to an undefined directive
       "-Wunused"                      #Warn about unused variables/parameters
       "-Wunused-variable"             #Warn about variables that are not used
-      "-Wunused-parameter"            #Warn about function parameters which are unused
+      "-Wno-unused-parameter"         #No-Warn about function parameters which are unused
       "-Wdisabled-optimization"       #Warn when optimizations are skipped (usually due to large/complex code)
       "-Wnoexcept"                    #Warn when functions should be noexcept (i.e. compiler know it doesn't throw)
       "-Woverloaded-virtual"          #Warn when a function declaration overrides a virtual method
@@ -186,7 +186,7 @@ else ()
       "-Wuninitialized"               #Warn about unitialized values
       "-Winit-self"                   #Warn about self-initialization
       "-Wcatch-value=3"               #Warn when catch statements don't catch by reference
-      "-Wextra-semi"                  #Warn about redudnant semicolons
+      "-Wno-extra-semi"               #No-Warn about redudnant semicolons
       "-Wimplicit-fallthrough=3"      #Warn about case fallthroughs, but allow 'fallthrough' comments to suppress warnings
       #GCC-like optional
       #"-Wsuggest-final-types"         #Suggest where 'final' would help if specified on a type methods
@@ -249,10 +249,13 @@ if (OPENFPGA_WITH_SWIG)
 endif()
 add_compile_options(${SWIG_SHARED_FLAGS})
 
+set(ALWAYS_PIC_FLAGS "-fPIC")
+add_compile_options(${ALWAYS_PIC_FLAGS})
+
 # Set final flags
 #
 separate_arguments(
-    ADDITIONAL_FLAGS UNIX_COMMAND "${SANITIZE_FLAGS} ${PROFILING_FLAGS} ${COVERAGE_FLAGS} ${LOGGING_FLAGS} ${COLORED_COMPILE} ${EXTRA_FLAGS} ${SWIG_SHARED_FLAGS}"
+    ADDITIONAL_FLAGS UNIX_COMMAND "${SANITIZE_FLAGS} ${PROFILING_FLAGS} ${COVERAGE_FLAGS} ${LOGGING_FLAGS} ${COLORED_COMPILE} ${EXTRA_FLAGS} ${SWIG_SHARED_FLAGS} ${ALWAYS_PIC_FLAGS}"
     )
 separate_arguments(
     WARN_FLAGS UNIX_COMMAND "${WARN_FLAGS}"
