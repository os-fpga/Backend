diff --git a/vpr/src/base/vpr_types.h b/vpr/src/base/vpr_types.h
index a7528f8c8..76ecdf425 100644
--- a/vpr/src/base/vpr_types.h
+++ b/vpr/src/base/vpr_types.h
@@ -958,10 +958,13 @@ struct t_packer_opts {
     e_stage_action doPacking;
     enum e_packer_algorithm packer_algorithm;
     std::string device_layout;
+    std::string top_mod;
     e_timing_update_type timing_update_type;
     bool use_attraction_groups;
     int pack_num_moves;
     std::string pack_move_type;
+    bool use_partitioning_in_pack;
+    int number_of_molecules_in_partition;
 };
 
 /**
@@ -1016,7 +1019,8 @@ struct t_annealing_sched {
 enum e_place_algorithm {
     BOUNDING_BOX_PLACE,
     CRITICALITY_TIMING_PLACE,
-    SLACK_TIMING_PLACE
+    SLACK_TIMING_PLACE,
+    CONGESTION_AWARE_PLACE
 };
 
 enum e_place_bounding_box_mode {
@@ -1066,7 +1070,7 @@ class t_place_algorithm {
 
     ///@brief Check if the algorithm belongs to the timing driven category.
     inline bool is_timing_driven() const {
-        return algo == CRITICALITY_TIMING_PLACE || algo == SLACK_TIMING_PLACE;
+        return algo == CRITICALITY_TIMING_PLACE || algo == SLACK_TIMING_PLACE || algo== CONGESTION_AWARE_PLACE;
     }
 
     ///@brief Accessor: returns the underlying e_place_algorithm enum value.
@@ -1201,6 +1205,7 @@ struct t_placer_opts {
     t_place_algorithm place_algorithm;
     t_place_algorithm place_quench_algorithm;
     float timing_tradeoff;
+    float congestion_tradeoff;
     float place_cost_exp;
     int place_chan_width;
     enum e_pad_loc_type pad_loc_type;
@@ -1275,6 +1280,8 @@ struct t_placer_opts {
      * of the annealing placer for local improvement
      */
     bool enable_analytic_placer;
+    // Cascade Placer
+    bool enable_cascade_placer;
 };
 
 /* All the parameters controlling the router's operation are in this        *
